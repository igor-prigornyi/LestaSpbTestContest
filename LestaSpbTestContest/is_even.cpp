#include "is_even.h"

namespace is_even {

// Функция проверки числа на чётность с помощью операции остатка от деления (%)
bool isEvenByModulo(int value) {

	// Простая проверка равенста нулю остатка от деления на 2
	// return value % 2 == 0;

	// Также можно записать без сравнения с нулём, возвращённая 0 (в случае чётного
	// числа) или 1 (в случае нечётного числа) от операции % 2 будет сразу ковертирована
	// в true (для чётного числа) или false (для нечётного числа) после взятия операции
	// логического отрицания
	//
	// Такой способ выглядит наглядно, однако, операция математического взятия остатка
	// может быть менее производительна с большими числами, чем побитовые операции

	return !(value % 2);
}

// Функция проверки числа на чётность с помощью операции побитового AND (&)
bool isEvenByBitwise(int value) {

	// В двоичной системе проверка чётности числа сводится до проверки самого
	// младшего разряда. Если в самой последней цифрой числа была 1 - значит,
	// число нечётное. А если 0 - значит, число чётное. Для этой проверки
	// умножим побитово (операция AND) наше число на 1, например:
	//
	//     10101 - 21 в двоичной системе
	// AND 00001 - 1  в двоичной системе
	//     _____
	//     00001 - 1, т.е. число нечётное
	//
	// Такой способ менее нагляден, но будет работать быстрее с большими числами

	return !(value & 1);
}

}